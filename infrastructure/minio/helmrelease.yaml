---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: minio-release
  namespace: minio
spec:
  chart:
    spec:
      chart: minio
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        name: minio
      version: v5.4.0
  interval: 5m0s
  values:
    nameOverride: "minio"
    fullnameOverride: "minio"
    image:
      repository: quay.io/minio/minio
      tag: RELEASE.2024-12-18T13-15-44Z
      pullPolicy: IfNotPresent
    mcImage:
      repository: quay.io/minio/mc
      tag: RELEASE.2024-11-21T17-21-54Z
      pullPolicy: IfNotPresent
    mode: standalone
    rootUser: ""
    rootPassword: ""
    existingSecret: minio-login
    persistence:
      enabled: true
      storageClass: nfs
      accessMode: ReadWriteMany
      size: 150Gi
      annotations: {}
    ingress:
      enabled: true
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: web
      path: /
      hosts:
        - minio.homelab
    consoleIngress:
      enabled: true
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: web
        gethomepage.dev/description: S3 compatible storage
        gethomepage.dev/enabled: "true"
        gethomepage.dev/group: Infrastructure
        gethomepage.dev/icon: minio.png
        gethomepage.dev/name: Minio
        gethomepage.dev/pod-selector: ""
      path: /
      hosts:
        - console.minio.homelab
    resources:
      requests:
        memory: 2Gi
        cpu: 500m
      limits:
        memory: 4Gi
        cpu: 1
    users:
      - existingSecret: minio-user
        existingSecretKey: secretKey
        accessKey: longhorn
        policy: readwrite
    buckets:
      - name: longhorn-backups
        versioning: true
        policy: none
        purge: false
      - name: cnpg-backups
        versioning: true
        policy: none
        purge: false
    securityContext:
      enabled: true
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000
      fsGroupChangePolicy: "Always"
    containerSecurityContext:
      enabled: true
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000
      fsGroupChangePolicy: "Always"
    postJob:
      podAnnotations: {}
      annotations: {}
      securityContext:
        enabled: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: "Always"
